version: "3.8"

services:
  backend:
    build: .
    env_file: .env        # Coolify â†’ Environment Group
    expose:
      - "8080"
    labels:
      - traefik.enable=true
      - traefik.http.services.backend.loadbalancer.server.port=8080
      - traefik.http.routers.backend.rule=Host(`nock.ing`) && PathPrefix(`/`)
      - traefik.http.routers.backend.entryPoints=https
      - traefik.http.routers.backend.tls=true
    depends_on:
      - psql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5

  psql:
    image: postgres:16-alpine
    env_file: .env
    volumes:
      - psql:/var/lib/postgresql/data
    expose: ["5432"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis/redis-stack:latest
    expose: ["6379"]
    volumes:
      - redis-data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  psql:
  redis-data:
